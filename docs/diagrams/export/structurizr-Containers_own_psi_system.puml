@startuml
set separator none
title PSI System - Containers

top to bottom direction

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
}

hide stereotype

skinparam hexagon<<BroadcasterCustomerAppliance>> {
  BackgroundColor #a3a3a3
  FontColor #000000
  BorderColor #727272
  shadowing false
}
skinparam hexagon<<OtherPSISystem>> {
  BackgroundColor #a3a3a3
  FontColor #000000
  BorderColor #727272
  shadowing false
}
skinparam database<<PSISystem.PSIapidatabase>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam rectangle<<PSISystem.PSIdataexchangeserviceDES>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam rectangle<<PSISystem.PSIfrontendAPI>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam rectangle<<PSISystem.PSIfrontendmodule>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam person<<User>> {
  BackgroundColor #001ac5
  FontColor #ffffff
  BorderColor #001289
  shadowing false
}
skinparam person<<Userofothersystem>> {
  BackgroundColor #a3a3a3
  FontColor #ffffff
  BorderColor #727272
  shadowing false
}
skinparam database<<PSISystem.instanceopeniddatabase>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam database<<PSISystem.instanceuserdatabase>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam rectangle<<PSISystem.openidservice>> {
  BackgroundColor #0062ff
  FontColor #000000
  BorderColor #0044b2
  shadowing false
}
skinparam rectangle<<PSISystem>> {
  BorderColor #0044b2
  FontColor #0044b2
  shadowing false
}

person "==User\n<size:10>[Person]</size>\n\nA user is a broadcaster's recipient, using the services the broadcaster supplies" <<User>> as User
person "==User of other system\n<size:10>[Person]</size>\n\nThis user is another broadcaster's recipient, using the services this broadcaster supplies" <<Userofothersystem>> as Userofothersystem
hexagon "==Broadcaster Customer Appliance\n<size:10>[Software System]</size>\n\nBroadcaster's streaming appliance, content-management-system (may be a streaming platform, may be an editorial system or any other system targeted towards customers)" <<BroadcasterCustomerAppliance>> as BroadcasterCustomerAppliance
hexagon "==Other PSI System\n<size:10>[Software System]</size>\n\nBroadcaster's streaming appliance, content-management-system (may be a streaming platform, may be an editorial system or any other system targeted towards customers)" <<OtherPSISystem>> as OtherPSISystem

rectangle "PSI System\n<size:10>[Software System]</size>" <<PSISystem>> {
  rectangle "PSI Frontend" <<group1>> {
    skinparam RectangleBorderColor<<group1>> #cccccc
    skinparam RectangleFontColor<<group1>> #cccccc
    skinparam RectangleBorderStyle<<group1>> dashed

    rectangle "==PSI frontend module\n<size:10>[Container]</size>\n\nThis represents all frontend modules of this PSI-instance." <<PSISystem.PSIfrontendmodule>> as PSISystem.PSIfrontendmodule
    rectangle "==PSI frontend API\n<size:10>[Container]</size>\n\nThis represents all api-services of this PSI-instance." <<PSISystem.PSIfrontendAPI>> as PSISystem.PSIfrontendAPI
    database "==PSI api database\n<size:10>[Container]</size>" <<PSISystem.PSIapidatabase>> as PSISystem.PSIapidatabase
  }

  rectangle "Peripheral Services" <<group2>> {
    skinparam RectangleBorderColor<<group2>> #cccccc
    skinparam RectangleFontColor<<group2>> #cccccc
    skinparam RectangleBorderStyle<<group2>> dashed

    rectangle "==open-id service\n<size:10>[Container]</size>\n\nThis service provides authentication and authorization services. It produces JWT and other token-formats (bearer, etc.)." <<PSISystem.openidservice>> as PSISystem.openidservice
    database "==instance user database\n<size:10>[Container]</size>" <<PSISystem.instanceuserdatabase>> as PSISystem.instanceuserdatabase
    database "==instance openid database\n<size:10>[Container]</size>" <<PSISystem.instanceopeniddatabase>> as PSISystem.instanceopeniddatabase
    rectangle "==PSI data exchange service (DES)\n<size:10>[Container]</size>\n\nThis represents the export api of this PSI-instance." <<PSISystem.PSIdataexchangeserviceDES>> as PSISystem.PSIdataexchangeserviceDES
  }

}

PSISystem.PSIfrontendAPI .[#707070,thickness=2].> PSISystem.PSIdataexchangeserviceDES : "<color:#707070>submits and gathers data stored by the backend"
PSISystem.PSIfrontendAPI .[#707070,thickness=2].> PSISystem.openidservice : "<color:#707070>validates and authenticates users"
PSISystem.PSIfrontendAPI .[#707070,thickness=2].> PSISystem.instanceuserdatabase : "<color:#707070>updates own user properties, reads own user properties"
PSISystem.openidservice .[#707070,thickness=2].> PSISystem.instanceuserdatabase : "<color:#707070>reads from"
PSISystem.openidservice .[#707070,thickness=2].> PSISystem.instanceopeniddatabase : "<color:#707070>reads from and writes to"
BroadcasterCustomerAppliance .[#707070,thickness=2].> PSISystem.openidservice : "<color:#707070>authenticates"
User .[#707070,thickness=2].> BroadcasterCustomerAppliance : "<color:#707070>Consumes comments / social contents that are embedded into the customer appliance"
User .[#707070,thickness=2].> PSISystem.PSIfrontendmodule : "<color:#707070>direct interaction with a fused frontend (social network) or a catalogue of apps"
BroadcasterCustomerAppliance .[#707070,thickness=2].> PSISystem.PSIfrontendmodule : "<color:#707070>embeds PSI-frontend modules(native or via iframe)"
BroadcasterCustomerAppliance .[#707070,thickness=2].> PSISystem.PSIfrontendAPI : "<color:#707070>authenticates at PSI-related  backends of its own PSI-cluster"
OtherPSISystem .[#707070,thickness=2].> PSISystem.PSIdataexchangeserviceDES : "<color:#707070>"
PSISystem.PSIdataexchangeserviceDES .[#707070,thickness=2].> OtherPSISystem : "<color:#707070>comment and account exchange"
PSISystem.PSIfrontendmodule .[#707070,thickness=2].> PSISystem.PSIfrontendAPI : "<color:#707070>submits and gathers data stored by the backend"
PSISystem.openidservice .[#707070,thickness=2].> OtherPSISystem : "<color:#707070>authenticate and authorize system using auth-code"
OtherPSISystem .[#707070,thickness=2].> PSISystem.openidservice : "<color:#707070>authenticate and authorize system using auth-code"
Userofothersystem .[#707070,thickness=2].> OtherPSISystem : "<color:#707070>Consumes comments / social contents of this PSI-system"
PSISystem.PSIfrontendAPI .[#707070,thickness=2].> PSISystem.PSIapidatabase : "<color:#707070>reads from and writes to"
@enduml